variant: fcos
version: 1.5.0
passwd:
  users:
    - name: core
      groups:
        - docker
      ssh_authorized_keys:
        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCqRRLLldAbLLbFq9k/6dDXSAPgvKTVJuZOEBCf6X8Vgi0/+6twfkM6oVGzcq3FajLHdyFFaQAYdfce5DcLQi6Tt4kiNm+jZH4f+D6166q/8pnHKY5zQfAqbGCUldkZiGUBPHoqqenDUBEhDvVbGJPo2gh3VbEr+w4kMQDzoCCW+HRphLwEEOwikE7Ls54vDw9iNLmoqUTcOeuOAVs3ui0TTbVTXcvfpga7cH6SJssgeBLeMtkpcbIilXX75qHIvJHCE6qOQWLvA1cdH9nqsjzYii/ydzQpTQydRtFDP12nGrD8W77O+/WkXsXp7R0+7QQoV1OAzzEaMRqA0QIypK2LvloaFow2he6j9H9o/+vQ3qU33/5JdhvpN+BjabByh9QQkW0eei6I1AfzCQ8entpxwUBwaGHOseIARBiT31sTdh06n/hSElysUM7V57rPwq9x4zsSV4C5FAruoCEJYFRW+qJ1UySXcPuKI62eQ0+s82JudF0nwCFGSBMcRUksb3U= mafuyu@natura
storage:
  files:
    - path: /opt/homelab/systemd/portainer/docker-compose.yml
      mode: 493 #755
      contents:
        inline: |-
          version: '2'
          services:
            portainer:
              image: portainer/portainer
              volumes:
                - '/opt/portainer:/data'
                - '/var/run/docker.sock:/var/run/docker.sock'
              ports:
                - 9000:9000
              labels:
                - 'traefik.enable=true'
                - "traefik.http.routers.frontend.entrypoints=web"
                - 'traefik.http.services.portainer.loadbalancer.server.port=9000'
                - "traefik.http.routers.edge.entrypoints=web"
                - "traefik.http.services.edge.loadbalancer.server.port=8000"
                - "traefik.http.routers.edge.service=edge"
              command:
                - --no-analytics
                - --host=unix:///var/run/docker.sock
    - path: "/opt/homelab/systemd/traefik/docker-compose.yml"
      mode: 493 #755
      contents:
        inline: |-
          version: '2'
          services:
            traefik:
              image: traefik:v2.0
              ports:
                # The HTTP port
                - "80:80"
                # The HTTPS port
                - "443:443"
                # The Web UI (enabled by --api.insecure=true)
                - "8080:8080"
              volumes:
                - "/var/run/docker.sock:/var/run/docker.sock:ro"
                - "/opt/homelab/traefik/letsencrypt:/letsencrypt"
              command:
                - --api.insecure=true
                - --providers.docker
                - --providers.docker.exposedByDefault=false
                - --providers.docker.network=traefik
                - --entrypoints.web.address=:80
                - --entrypoints.websecure.address=:443
                - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
                - "traefik.http.routers.http-catchall.entrypoints=web"
                - "--serverstransport.forwardingtimeouts.idleconntimeout=10"
              labels:
                - traefik.enable=true
              networks:
                - traefik
          networks:
            traefik:
              external: true
  directories:
    - path: /opt/homelab/systemd
      mode: 493 #755
    - path: /opt/homelab/systemd/portainer
      mode: 493 #755
    - path: /opt/homelab/systemd/traefik
      mode: 493 #755
systemd:
  units:
    - name: rpm-ostree-install-docker-compose.service
      enabled: true
      contents: |-
        [Unit]
        Description=Layer docker-compose with rpm-ostree
        Wants=network-online.target
        After=network-online.target
        # We run before `zincati.service` to avoid conflicting rpm-ostree
        # transactions.
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        # `--allow-inactive` ensures that rpm-ostree does not return an error
        # if the package is already installed. This is useful if the package is
        # added to the root image in a future Fedora CoreOS release as it will
        # prevent the service from failing.
        ExecStart=/usr/bin/rpm-ostree install -y --allow-inactive docker-compose
        ExecStart=/bin/touch /var/lib/%N.stamp
        ExecStart=/bin/systemctl --no-block reboot

        [Install]
        WantedBy=multi-user.target
    - name: portainer.service
      enabled: true
      contents: |-
        [Unit]
        Description=Portainer Admin Container
        After=docker.service
        Requires=docker.service

        [Service]
        Restart=always
        TimeoutStartSec=0
        Restart=always
        WorkingDirectory=/opt/homelab/systemd/portainer/
        ExecStartPre=-/usr/bin/docker-compose down -v
        ExecStartPre=-/usr/bin/docker-compose rm -v
        ExecStartPre=-/usr/bin/docker-compose pull
        ExecStart=/usr/bin/docker-compose up
        ExecStop=/usr/bin/docker-compose down -v

        [Install]
        WantedBy=multi-user.target
        WantedBy=docker.service
    - name: traefik.service
      enabled: true
      contents: |-
        [Unit]
        Description=Traefik Router Container
        After=docker.service
        Requires=docker.service

        [Service]
        Restart=always
        TimeoutStartSec=0
        Restart=always
        WorkingDirectory=/opt/homelab/systemd/traefik/
        ExecStartPre=-/usr/bin/docker-compose down -v
        ExecStartPre=-/usr/bin/docker-compose rm -v
        ExecStartPre=-/usr/bin/docker-compose pull
        ExecStart=/usr/bin/docker-compose up
        ExecStop=/usr/bin/docker-compose down -v

        [Install]
        WantedBy=multi-user.target
        WantedBy=docker.service
